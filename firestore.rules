rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Kullanıcı kimlik doğrulaması kontrolü
    function isAuthenticated() {
      return request.auth != null;
    }

    // Admin kontrolü
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Kullanıcının kendi dokümanına erişim kontrolü
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Kullanıcılar koleksiyonu
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if true; // Kayıt işlemi için
      allow update, delete: if isOwner(userId) || isAdmin();
    }

    // Projeler koleksiyonu
    match /projects/{projectId} {
      allow read: if isAuthenticated();
      allow create: if isAdmin();
      allow update: if isAuthenticated() && (
        isAdmin() || 
        // Sadece parts array'ini güncellemeye izin ver
        (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['parts']))
      );
      allow delete: if isAdmin();
    }

    // Konfigürasyonlar koleksiyonu
    match /configurations/{configId} {
      allow read: if true; // Kayıt anahtarı kontrolü için herkese okuma izni
      allow write: if isAdmin();
    }
  }
} 